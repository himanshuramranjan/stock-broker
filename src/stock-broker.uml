@startuml

class StockExchange {
    - static Map<String, StockExchange> exchanges
    - String exchangeName
    + static StockExchange getInstance(String exchangeName)
    + void executeOrder(Order order, Investor investor)
    + void addStock(Stock stock)
}

class Stock {
    - String symbol
    - String companyName
    - double currentPrice
    + String getSymbol()
    + double getCurrentPrice()
}

class Broker {
    - static Broker instance
    - String brokerId
    - String name
    - Map<String, Investor> investors
    + static Broker getInstance(String brokerId, String name)
    + void addInvestor(Investor investor)
    + void placeOrder(Investor investor, Order order)
}

abstract class User {
    - String userId
    - String name
    - String email
}

class Investor extends User implements OrderObserver {
    - Portfolio portfolio
    - double balance
    + void placeOrder(OrderType type, Stock stock, int quantity, double price, Broker broker)
    + void updateBalance(double amount)
    + void update(Order order)
}

class Portfolio {
    - String investorId
    - Map<Stock, Integer> holdings
    + void addStock(Stock stock, int quantity)
    + boolean removeStock(Stock stock, int quantity) throws InsufficientStockException
    + void displayPortfolio()
}

class Order {
    - static int idCounter
    - String orderId
    - OrderType orderType
    - Stock stock
    - int quantity
    - double price
    - OrderStatus status
    + String getOrderId()
    + OrderStatus getStatus()
}

class OrderProcessor {
    - static OrderProcessor instance
    + static OrderProcessor getInstance()
    + void processOrder(Order order, Investor investor) throws InsufficientFundsException, InsufficientStockException
}

enum OrderType {
    MARKET_BUY, LIMIT_BUY, MARKET_SELL, LIMIT_SELL
}

enum OrderStatus {
    PENDING, EXECUTED, CANCELLED, INSUFFICIENT_FUNDS, INSUFFICIENT_STOCK
}

interface OrderObserver {
    + void update(Order order)
}

// Relationships
User <|-- Investor
Investor "1" *- "1" Portfolio
Investor "1" o- "many" Order
Investor "1" ..|> OrderObserver
Portfolio "1" o- "many" Stock
Broker "1" o- "many" Investor
Broker "1" o- "many" StockExchange
StockExchange "1" o- "many" Stock
StockExchange "1" ..> OrderProcessor : uses
OrderProcessor "1" ..> Order : processes

@enduml